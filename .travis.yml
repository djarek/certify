sudo: false

language: cpp

addons:
  apt:
    sources: &base_sources
      - ubuntu-toolchain-r-test

matrix:
  include:
    # g++5
    - os: linux
      addons:
        apt:
          packages:
            - g++-5
          sources:
            - *base_sources

      compiler: g++-5
      env:
        - BOOST_TOOLSET=gcc-5
      script: ./b2 cxxstd=11 toolset=$BOOST_TOOLSET libs/certify/tests libs/certify/tools/ libs/certify/examples

    # Default clang++
    - os: linux
      compiler: clang++
      env:
        - BOOST_TOOLSET=clang
      script: ./b2 cxxstd=11 toolset=$BOOST_TOOLSET libs/certify/tests libs/certify/tools/ libs/certify/examples

    # GCC 6.0, Debug + Coverage
    - os: linux
      compiler: g++-6
      env:
        - BOOST_TOOLSET=gcc-6
      addons:
        apt:
          packages:
            - g++-6
            - lcov
          sources:
            - *base_sources
      script:
        - ./b2 variant=debug cxxstd=11 toolset=$BOOST_TOOLSET linkflags="-fprofile-arcs" cxxflags="-fprofile-arcs -ftest-coverage" libs/certify/tests libs/certify/tools/ libs/certify/examples
        - ./libs/certify/tools/coverage.sh
        - curl -s https://codecov.io/bash -o codecov && bash ./codecov -X gcov -f bin.v2/coverage.info -y ./.codecov.yml

    # OS X Clang, C++14, Debug
    - os: osx
      compiler: clang++
      before_install:
        - git clone https://github.com/openssl/openssl.git
        - cd openssl
        - export OPENSSL_ROOT=~/openssl-prefix
        - mkdir -p $OPENSSL_ROOT
        - ./config --prefix=$OPENSSL_ROOT
        - make
        - make install > /dev/null
        - cd ..
        - rm -rf openssl
        - cp tools/user-config.jam ~/
        - alias readlink=greadlink
      script:
        - ./b2 variant=debug cxxstd=14 toolset=clang libs/certify/tests libs/certify/tools/ libs/certify/examples

install:
  - cd ..
  - $TRAVIS_BUILD_DIR/tools/get_boost.sh $TRAVIS_BRANCH $TRAVIS_BUILD_DIR
  - cd boost-root
  - ./bootstrap.sh
